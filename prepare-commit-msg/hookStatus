#!/usr/bin/env ruby
#
# This script will append the exit status of all other hooks to the approved
# commit message.
#
require 'digest'

def getMessage
  @messageFile = ARGV[0]
  @originalMessage = File.read("../#{messageFile}")
  @hookStatus = File.read('/tmp/hookStatus')
end
getMessage

def prepSignature
  shuffled_string = 'Captain'.split('').shuffle.join
  hashID = Digest::SHA1.hexdigest shuffled_string
  @hookStatus = "\n#{hookStatus}\
                 \nSigned off by Captain\
                 \nApproval ID: #{hashID}\n"
end
prepSignature

def formatMessage
  commentMatch = @originalMessage.match(/((^\#.*$\n){3})/)

  @resultPosition = if commentMatch
                      commentMatch.offset(0)[0]
                    else
                      @orignalMessage.length - 1
                    end
end
formatMessage

def prepCommit
  @originalMessage.insert(@resultPosition, @hookStatus) if ARGV[1] == 'message'
  File.open("../#{@messageFile}", 'w') { |f| f.write @originalMessage }
  File.delete('/tmp/hookStatus')
end
prepCommit
