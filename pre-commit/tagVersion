#!/usr/bin/env ruby
#
# This script is used for the tagGitRepo Orion module. The pipeline.properties
# file will be parsed for the increment parameter's value and updated based on
# user input. The pipeline.properties file will then be added to the commit if
# the value has been changed.
#
@scriptDir = File.expand_path(File.dirname(__FILE__))

def getIncrement
  Dir.chdir(@scriptDir)
  @properties = File.read('../../pipeline.properties')
  @increment = @properties[/(major$|minor$|patch$)/]
end
getIncrement

def newIncrement
  puts 'acceptable increment values: [major, minor, patch]'
  print "version to increment [#{@increment}]: "
  STDIN.reopen('/dev/tty')
  @version = $stdin.gets.chomp
end
newIncrement

def validateIncrement
  @version = @increment if @version.eql?('')
  if @version == @increment
    File.open('/tmp/hookStatus', 'a')\
      { |f| f.write("tagVersion: keeping existing value\n") }
    exit 0
  else
    updateProperties
  end
end
validateIncrement

def updateProperties
  newIncrement = @properties.gsub(/(major$|minor$|patch$)/, @version)

  File.open('../../pipeline.properties', 'w') { |file| file.puts newIncrement }
  File.open('/tmp/hookStatus', 'a')\
    { |f| f.write("tagVersion: changing to #{@version}\n") }
end

def updateGit
  Dir.chdir('../..') do
    system('git add pipeline.properties')
    exit 0
  end
end
updateGit
